import base64
import gzip

# NOTE: This list is completely arbitrary. I chose it based on my personal preference, your mileage may vary.

def get_allowable_images():
    data = str(gzip.decompress(base64.b64decode(DATA)), 'utf-8')
    return set(data.split('|'))

DATA = b'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'    
